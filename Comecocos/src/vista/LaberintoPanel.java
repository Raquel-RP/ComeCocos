package vista;

import java.awt.Color;
import java.awt.Graphics;
import modelo.Comecocos;
import modelo.Laberinto;

/**
 *
 * @author Raquel Romero
 * @author Raquel Pulido
 */
public class LaberintoPanel extends javax.swing.JPanel {

    ComecocosFrame comecocosFrame_;
    int anchoCelda = 17;

    /**
     * Creates new form LaberintoPanel
     */
    public LaberintoPanel(ComecocosFrame comecocosFrame) {
        this();
        comecocosFrame_ = comecocosFrame;
    }

    public LaberintoPanel() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {

        super.paintComponent(g);
        g.setColor(Color.white);
        g.fillRect(0, 0, this.getWidth(), this.getHeight());
        dibujarLaberinto(g);
        dibujarComecocos(g);

        // TODO dibujar fantasmas
    }

    private void dibujarLaberinto(Graphics g) {

        Laberinto laberinto = comecocosFrame_.getModelo().getLaberinto();
        int nfilas = laberinto.getAltura();
        int ncolumnas = laberinto.getAnchura();

        for (int fila = 0; fila < nfilas; fila++) {
            for (int columna = 0; columna < ncolumnas; columna++) {

                switch (laberinto.getCelda(columna, fila)) {
                    case BLOQUE:
                        g.setColor(Color.blue);
                        g.fillRect(columna * anchoCelda, fila * anchoCelda,
                                anchoCelda, anchoCelda);
                        break;
                }
            }
        }
    }

    private void dibujarComecocos(Graphics g) { // plano vertical invertido Eje Y mayor hacia abajo

        Comecocos comecocos = comecocosFrame_.getModelo().getComecocos();

        g.setColor(Color.yellow);
        g.fillOval(comecocos.getColumna() * anchoCelda,
                comecocos.getFila() * anchoCelda, anchoCelda, anchoCelda);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        System.out.println("Mouse Entered");
        requestFocus(); // Para que los eventos del teclado los reciba el panel
    }//GEN-LAST:event_formMouseEntered

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        comecocosFrame_.getControlador().teclaPulsadaEnLaberintoPanel(evt);
    }//GEN-LAST:event_formKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
